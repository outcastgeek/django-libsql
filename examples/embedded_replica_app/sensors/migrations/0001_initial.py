# Generated by Django 5.2.4 on 2025-08-04 17:26

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("background", "Background"),
                            ("write", "After Write"),
                        ],
                        max_length=20,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("duration_ms", models.IntegerField(null=True)),
                ("records_synced", models.IntegerField(null=True)),
                ("success", models.BooleanField(default=True)),
                ("error_message", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AggregatedData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sensor_id", models.CharField(db_index=True, max_length=50)),
                ("date", models.DateField(db_index=True)),
                (
                    "avg_temperature",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("avg_humidity", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "min_temperature",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "max_temperature",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("reading_count", models.IntegerField()),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-date", "sensor_id"],
                "unique_together": {("sensor_id", "date")},
            },
        ),
        migrations.CreateModel(
            name="SensorReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sensor_id", models.CharField(db_index=True, max_length=50)),
                ("temperature", models.DecimalField(decimal_places=2, max_digits=5)),
                ("humidity", models.DecimalField(decimal_places=2, max_digits=5)),
                ("location", models.CharField(max_length=100)),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("synced", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["sensor_id", "timestamp"],
                        name="sensors_sen_sensor__6ce6a7_idx",
                    )
                ],
            },
        ),
    ]
