# Generated by Django 5.2.4 on 2025-08-03 19:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Website",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain", models.CharField(max_length=255, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("tracking_id", models.CharField(max_length=50, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PageView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                ("page_path", models.CharField(max_length=500)),
                ("page_title", models.CharField(blank=True, max_length=200)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("referrer_url", models.URLField(blank=True)),
                (
                    "referrer_domain",
                    models.CharField(blank=True, db_index=True, max_length=255),
                ),
                ("device_type", models.CharField(max_length=20)),
                ("browser", models.CharField(max_length=50)),
                ("os", models.CharField(max_length=50)),
                ("country", models.CharField(blank=True, max_length=2)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("page_load_time", models.FloatField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(db_index=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pageviews",
                        to="analytics.website",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="HourlyStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hour", models.DateTimeField(db_index=True)),
                ("pageviews", models.IntegerField(default=0)),
                ("unique_visitors", models.IntegerField(default=0)),
                ("sessions", models.IntegerField(default=0)),
                ("bounces", models.IntegerField(default=0)),
                ("events", models.IntegerField(default=0)),
                ("avg_page_load_time", models.FloatField(blank=True, null=True)),
                ("avg_session_duration", models.FloatField(blank=True, null=True)),
                ("top_pages", models.JSONField(default=list)),
                ("top_referrers", models.JSONField(default=list)),
                ("device_breakdown", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hourly_stats",
                        to="analytics.website",
                    ),
                ),
            ],
            options={
                "ordering": ["-hour"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("click", "Click"),
                            ("form_submit", "Form Submit"),
                            ("download", "Download"),
                            ("video_play", "Video Play"),
                            ("scroll", "Scroll"),
                            ("custom", "Custom"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("event_name", models.CharField(max_length=100)),
                ("event_value", models.CharField(blank=True, max_length=255)),
                ("event_data", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(db_index=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pageview",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="analytics.pageview",
                    ),
                ),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="analytics.website",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DailyStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(db_index=True)),
                ("pageviews", models.IntegerField(default=0)),
                ("unique_visitors", models.IntegerField(default=0)),
                ("sessions", models.IntegerField(default=0)),
                ("bounces", models.IntegerField(default=0)),
                ("bounce_rate", models.FloatField(blank=True, null=True)),
                ("events", models.IntegerField(default=0)),
                ("avg_page_load_time", models.FloatField(blank=True, null=True)),
                ("avg_session_duration", models.FloatField(blank=True, null=True)),
                ("pages_per_session", models.FloatField(blank=True, null=True)),
                ("pageviews_growth", models.FloatField(blank=True, null=True)),
                ("visitors_growth", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="daily_stats",
                        to="analytics.website",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("started_at", models.DateTimeField()),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                ("duration_seconds", models.IntegerField(default=0)),
                ("pageview_count", models.IntegerField(default=0)),
                ("event_count", models.IntegerField(default=0)),
                ("bounce", models.BooleanField(default=False)),
                ("ip_address", models.GenericIPAddressField()),
                ("country", models.CharField(blank=True, max_length=2)),
                ("device_type", models.CharField(max_length=20)),
                ("browser", models.CharField(max_length=50)),
                ("entry_page", models.CharField(max_length=500)),
                ("exit_page", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sessions",
                        to="analytics.website",
                    ),
                ),
            ],
            options={
                "ordering": ["-started_at"],
                "indexes": [
                    models.Index(
                        fields=["website", "-started_at"],
                        name="analytics_s_website_bdf6e5_idx",
                    ),
                    models.Index(
                        fields=["session_id"], name="analytics_s_session_189e16_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RealtimeVisitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100)),
                ("page_path", models.CharField(max_length=500)),
                ("ip_address", models.GenericIPAddressField()),
                ("country", models.CharField(blank=True, max_length=2)),
                ("device_type", models.CharField(max_length=20)),
                ("last_seen", models.DateTimeField(db_index=True)),
                (
                    "website",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="realtime_visitors",
                        to="analytics.website",
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["website", "-last_seen"],
                        name="analytics_r_website_ce6885_idx",
                    )
                ],
                "unique_together": {("website", "session_id")},
            },
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["website", "-timestamp"], name="analytics_p_website_49c95b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["session_id", "-timestamp"],
                name="analytics_p_session_57683f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="pageview",
            index=models.Index(
                fields=["page_path", "-timestamp"],
                name="analytics_p_page_pa_5137f7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="hourlystats",
            index=models.Index(
                fields=["website", "-hour"], name="analytics_h_website_c42b8d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="hourlystats",
            unique_together={("website", "hour")},
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["website", "event_type", "-timestamp"],
                name="analytics_e_website_1b2af8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["session_id", "-timestamp"],
                name="analytics_e_session_55fd3a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="dailystats",
            index=models.Index(
                fields=["website", "-date"], name="analytics_d_website_747d1c_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dailystats",
            unique_together={("website", "date")},
        ),
    ]
